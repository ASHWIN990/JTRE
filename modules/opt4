#!/usr/bin/env bash


clear #Clearing the terminal
echo -e "Cracking Compressed File Password\n"  #ADD AN ASCII ART HERE

cleanup1 () {
  rm $PWD/.temp/.opt* &> /dev/null
  rm $PWD/.temp/.temp* &> /dev/null
}

trap_ctrlc () {
    echo -e "\nCtrl-C caught...Performing Clean Up Thanks for Using."
    cleanup1
    exit 2
}

trap "trap_ctrlc" 2

options-list4 () {

echo -e "\e[1;93m1.   \e[1;92mCrack ZIP, Compressed File Password"
echo -e "\e[1;93m2.   \e[1;92mCrack RAR, Compressed FIle Password"
echo -e "\e[1;93m3.   \e[1;92mCrack 7Z, Compressed File Password\n\n"

}

options-selector4 () {

while true;
do
read -p $'\e[1;4;91mSELECT ONE OF THE OPTIONS WITH THE RESPECTED NUMBER\e[0m\e[24;1;97m : ' options4
case $options4 in
[1]* )  opt4-1 ;exit;;
[2]* )  opt4-2 ;exit;;
[3]* )  opt4-3 ;exit;;
* ) clear && options-list4 && echo -e "\e[1;92mPlease answer it with right options \n\e[0m";;
esac
done

}

compressed_file_selector () {

  read -p $'\e[1;91mEnter the path of the Compressed file\e[0m\e[24;1;97m : ' compressed_file_path
  if [ "$compressed_file_path" = "" ]
    then
          echo -e "No path provided please provide the path to the compressed file."
          options-list4
          options-selector4
    else
         if [ -f $compressed_file_path ]
           then
               echo -e "\n\nUsing the provided file.\n\n"
               compressed_file_name=$(basename "$compressed_file_path")

           else
               echo -e "The provided file does not exist please provide another compressed file or check the entered path"
               options-list4
               options-selector4
         fi
  fi

}

opt4-1 () {

  clear #Clearing the terminal for better apperarence
  echo -e "Cracking ZIP, Compressed File Password\n\n" #Add an ASCII art here
  compressed_file_selector #file selecting function calling
  read -p $'\e[1;91mEnter the path of the wordlist or press Enter for default wordlist\e[0m\e[24;1;97m : ' password1_list
  if [ "$password1_list" = "" ]
    then
         password1_list=$PWD/wordlist.txt
         echo -e "\n\nUsing the default wordlist, Fingers Crossed"
    else
         if [ -f $password1_list ]
           then
               echo -e "\n\nUsing the provided wordlist, Fingers Crossed, Wait it can take a while depending on the wordlist :::\n\n"
           else
               echo -e "The provided file does not exist please provide another wordlist file"
               options-list4
               options-selector4
         fi
  fi
time=$(date +"%T")
mv ~/.john/john.pot $PWD/.john.pot/$time-john.pot.bk &> /dev/null
zip2john $compressed_file_path &> $PWD/.temp/.temp_zip_hash
john  $PWD/.temp/.temp_zip_hash -w=$password1_list &> $PWD/.temp/.opt4
crack_pass4=$(awk '/'$compressed_file_name'/ {print $1}' $PWD/.temp/.opt4)
if [ "$crack_pass4" = "" ]
   then
      echo -e "Sorry the password was not cracked try another wordlist."
      cleanup1
      exit
   else
      echo -e "\n\nCongratulations the password is cracked and the password is $crack_pass4"
      echo -e "\nzip                 Password\n$compressed_file_path        =        $crack_pass4" >> cracked_password.txt
      cleanup1
fi

}

opt4-2 () {

  clear #Clearing the terminal for better apperarence
  echo -e "Cracking RAR, Compressed File Password\n\n" #Add an ASCII art here
  compressed_file_selector #file selecting function calling
  read -p $'\e[1;91mEnter the path of the wordlist or press Enter for default wordlist\e[0m\e[24;1;97m : ' password1_list
  if [ "$password1_list" = "" ]
    then
         password1_list=$PWD/wordlist.txt
         echo -e "\n\nUsing the default wordlist, Fingers Crossed"
    else
         if [ -f $password1_list ]
           then
               echo -e "\n\nUsing the provided wordlist, Fingers Crossed, Wait it can take a while depending on the wordlist :::\n\n"
           else
               echo -e "The provided file does not exist please provide another wordlist file"
               options-list4
               options-selector4
         fi
  fi
time=$(date +"%T")
mv ~/.john/john.pot $PWD/.john.pot/$time-john.pot.bk &> /dev/null
rar2john $compressed_file_path &> $PWD/.temp/.temp_rar_hash
john  $PWD/.temp/.temp_rar_hash -w=$password1_list &> $PWD/.temp/.opt4
crack_pass4=$(awk '/'$compressed_file_name'/ {print $1}' $PWD/.temp/.opt4)
if [ "$crack_pass4" = "" ]
   then
      echo -e "Sorry the password was not cracked try another wordlist."
      cleanup1
      exit
   else
      echo -e "\n\nCongratulations the password is cracked and the password is $crack_pass4"
      echo -e "\nrar                 Password\n$compressed_file_path        =        $crack_pass4" >> cracked_password.txt
      cleanup1
fi

}

opt4-3 () {

  clear #Clearing the terminal for better apperarence
  echo -e "Cracking 7z, Compressed File Password\n\n" #Add an ASCII art here
  compressed_file_selector #file selecting function calling
  read -p $'\e[1;91mEnter the path of the wordlist or press Enter for default wordlist\e[0m\e[24;1;97m : ' password1_list
  if [ "$password1_list" = "" ]
    then
         password1_list=$PWD/wordlist.txt
         echo -e "\n\nUsing the default wordlist, Fingers Crossed"
    else
         if [ -f $password1_list ]
           then
               echo -e "\n\nUsing the provided wordlist, Fingers Crossed, Wait it can take a while depending on the wordlist :::\n\n"
           else
               echo -e "The provided file does not exist please provide another wordlist file"
               options-list4
               options-selector4
         fi
  fi
time=$(date +"%T")
mv ~/.john/john.pot $PWD/.john.pot/$time-john.pot.bk &> /dev/null
python $PWD/modules/tools/7z2john.py $compressed_file_path &> $PWD/.temp/.temp_7z_hash
john  $PWD/.temp/.temp_7z_hash -w=$password1_list &> $PWD/.temp/.opt4
crack_pass4=$(awk '/'$compressed_file_name'/ {print $1}' $PWD/.temp/.opt4)
if [ "$crack_pass4" = "" ]
   then
      echo -e "Sorry the password was not cracked try another wordlist."
      cleanup1
      exit
   else
      echo -e "\n\nCongratulations the password is cracked and the password is $crack_pass4"
      echo -e "\n7z                 Password\n$compressed_file_path        =        $crack_pass4" >> cracked_password.txt
      cleanup1
fi

}

options-list4
options-selector4
cleanup1
