#!/usr/bin/env bash


clear #Clearing the terminal

banner () {

cat << "EOF" 

   ▄▄▄▄▄    ▄▄▄▄▄    ▄  █     ▄█▄    █▄▄▄▄ ██   ▄█▄    █  █▀ 
  █     ▀▄ █     ▀▄ █   █     █▀ ▀▄  █  ▄▀ █ █  █▀ ▀▄  █▄█   
▄  ▀▀▀▀▄ ▄  ▀▀▀▀▄   ██▀▀█     █   ▀  █▀▀▌  █▄▄█ █   ▀  █▀▄   
 ▀▄▄▄▄▀   ▀▄▄▄▄▀    █   █     █▄  ▄▀ █  █  █  █ █▄  ▄▀ █  █  
                       █      ▀███▀    █      █ ▀███▀    █   
                      ▀               ▀      █          ▀    
                                            ▀                
EOF
}
echo -e "Cracking SSH File Password\n"  #ADD AN ASCII ART HERE

cleanup1 () {
  rm $PWD/.temp/.opt* &> /dev/null
  rm $PWD/.temp/.temp* &> /dev/null
}

trap_ctrlc () {
    echo -e "\nCtrl-C caught...Performing Clean Up Thanks for Using."
    cleanup1
    exit 2
}

trap "trap_ctrlc" 2

ssh_file_path () {

  read -p $'\e[1;91mEnter the path of the SSH Key file\e[0m\e[24;1;97m : ' ssh_file_paths

}

ssh_file_selector () {

ssh_file_path
  if [ "$ssh_file_paths" = "" ]
    then
          echo -e "\nNo path provided please provide the path to the ssh file.\n"
          ssh_file_path
    else
         if [ -f $ssh_file_paths ]
           then
               echo -e "\n\nUsing the provided file.\n\n"
               ssh_file_name=$(basename "$ssh_file_paths")

           else
               echo -e "The provided file does not exist please provide another SSH Key file or check the entered path"
         fi
  fi

}

ssh_cracker() {

  clear #Clearing the terminal for better apperarence
  echo -e "Cracking ssh File Password\n\n" #Add an ASCII art here
  read -p $'\e[1;91mEnter the path of the wordlist or press Enter for default wordlist\e[0m\e[24;1;97m : ' password5_list
  if [ "$password5_list" = "" ]
    then
         password5_list=$PWD/wordlist.txt
         echo -e "\n\nUsing the default wordlist, Fingers Crossed"
    else
         if [ -f $password5_list ]
           then
               echo -e "\n\nUsing the provided wordlist, Fingers Crossed, Wait it can take a while depending on the wordlist :::\n\n"
           else
               echo -e "The provided file does not exist please provide another wordlist file"
               options-list4
               options-selector4
         fi
  fi
time=$(date +"%T")
mv ~/.john/john.pot $PWD/.john.pot/$time-john.pot.bk &> /dev/null
python $PWD/modules/tools/ssh2john.py $ssh_file_paths &> $PWD/.temp/.temp_ssh_hash
john  $PWD/.temp/.temp_ssh_hash -w=$password5_list &> $PWD/.temp/.opt6
crack_pass5=$(awk '/'$ssh_file_name'/ {print $1}' $PWD/.temp/.opt6)
if [ "$crack_pass5" = "" ]
   then
      echo -e "Sorry the password was not cracked try another wordlist."
      cleanup1
      exit
   else
      echo -e "\n\nCongratulations the password is cracked and the password is $crack_pass5"
      echo -e "\nssh                 Password\n$ssh_file_path        =        $crack_pass5" >> cracked_password.txt
      cleanup1
fi

}

banner
ssh_file_selector
ssh_cracker
cleanup1
